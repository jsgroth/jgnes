name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  # Force on Cargo's sparse protocol for crates.io, set to become default behavior in Rust 1.70
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install latest stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --check

    - name: Install libsdl2 and libgtk-3
      run: |
        sudo apt-get update && sudo apt-get install -y libsdl2-dev libgtk-3-dev

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build

    - name: Install cranky
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-cranky

    - name: Check Clippy warnings
      uses: actions-rs/cargo@v1
      with:
        command: cranky
        args: -- -D warnings

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: Add nightly toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: rust-src

    - name: Install wasm-pack
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Build web
      run: |
        cd jgnes-web && ./build.sh
  linux-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install libsdl2 and libgtk-3
        run: |
          sudo apt-get update && sudo apt-get install -y libsdl2-dev libgtk-3-dev

      - name: Build release
        run: |
          cargo build --release

      - name: Compress binaries
        run: |
          tar -czvf jgnes-linux.tar.gz LICENSE -C target/release jgnes-cli jgnes-gui

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86_64-bin
          path: jgnes-linux.tar.gz
          retention-days: 1
  windows-release:
    runs-on: ubuntu-latest

    env:
      SDL_VERSION: 2.26.5

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install mingw32
        run: |
          sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Install Windows x64 Rust build target
        run: |
          rustup target add x86_64-pc-windows-gnu

      - name: Download & extract Windows SDL2 libraries
        run: |
          wget https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL2-devel-$SDL_VERSION-mingw.tar.gz && \
          wget https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL2-$SDL_VERSION-win32-x64.zip && \
          tar -xzvf SDL2-devel-$SDL_VERSION-mingw.tar.gz && \
          unzip SDL2-$SDL_VERSION-win32-x64.zip

      - name: Build release
        run: |
          RUSTFLAGS="-Clink-arg=-ISDL2-$SDL_VERSION/x86_64-w64-mingw32/include -Clink-arg=-LSDL2-$SDL_VERSION/x86_64-w64-mingw32/lib" \
          cargo build --release --target x86_64-pc-windows-gnu

      - name: Compress binaries
        run: |
          mv target/x86_64-pc-windows-gnu/release/*.exe ./ && \
          zip -r jgnes-windows.zip LICENSE README-SDL.txt SDL2.dll jgnes-cli.exe jgnes-gui.exe

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: windows-x86_64-bin
          path: jgnes-windows.zip
          retention-days: 1
